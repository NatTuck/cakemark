#1: OPENCL_DEVICE_TYPE=cpu ./ft.B.x > log/FT.B.cpu.out
cake_spec: no spec annotation for init_ui
perl /home/nat/Apps/pocl/share/pocl/pocl-objs.pl /tmp/poclHaStam/pthread/init_ui/kernel.bc /home/nat/Apps/pocl/lib/pocl/x86_64
/usr/local/bin/llvm-link -o /tmp/poclHaStam/pthread/init_ui/kernel_linked.bc /tmp/poclHaStam/pthread/init_ui/kernel.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_local_size.c.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_global_id.c.bc /home/nat/Apps/pocl/lib/pocl/x86_64/exp.cl.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_group_id.c.bc /home/nat/Apps/pocl/lib/pocl/x86_64/barrier.ll.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_local_id.c.bc
/usr/local/bin/opt -load=/home/nat/Apps/pocl/lib/pocl/llvmopencl.so -domtree -workitem-handler-chooser -break-constgeps -generate-header -flatten -always-inline -specialize -spec-info=/tmp/poclHaStam/pthread/init_ui/spec.info -globaldce -simplifycfg -loop-simplify -phistoallocas -isolate-regions -uniformity -implicit-loop-barriers -loop-barriers -barriertails -barriers -isolate-regions -add-wi-metadata -wi-aa -workitemrepl -workitemloops -allocastoentry -workgroup -kernel=init_ui -local-size=64 1 1 -disable-simplify-libcalls -target-address-spaces -O3 -instcombine -header=/tmp/poclHaStam/pthread/init_ui/kernel_header.h -o /tmp/poclHaStam/pthread/init_ui/64-1-1.0-0-0/parallel.bc /tmp/poclHaStam/pthread/init_ui/kernel_linked.bc
Specialize kernel init_ui with /tmp/poclHaStam/pthread/init_ui/spec.info
Read arg 0
Read arg 1
Read arg 2
Read arg 3
Function args:
 - Arg u0, type %struct.dcomplex addrspace(1)*
 - Arg u1, type %struct.dcomplex addrspace(1)*
 - Arg twiddle, type double addrspace(1)*
 - Arg n, type i32
perl /home/nat/Apps/pocl/share/pocl/pocl-objs.pl /tmp/poclHaStam/pthread/compute_indexmap/kernel.bc /home/nat/Apps/pocl/lib/pocl/x86_64
/usr/local/bin/llvm-link -o /tmp/poclHaStam/pthread/compute_indexmap/kernel_linked.bc /tmp/poclHaStam/pthread/compute_indexmap/kernel.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_local_size.c.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_global_id.c.bc /home/nat/Apps/pocl/lib/pocl/x86_64/exp.cl.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_group_id.c.bc /home/nat/Apps/pocl/lib/pocl/x86_64/barrier.ll.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_local_id.c.bc
/usr/local/bin/opt -load=/home/nat/Apps/pocl/lib/pocl/llvmopencl.so -domtree -workitem-handler-chooser -break-constgeps -generate-header -flatten -always-inline -specialize -spec-info=/tmp/poclHaStam/pthread/compute_indexmap/spec.info -globaldce -simplifycfg -loop-simplify -phistoallocas -isolate-regions -uniformity -implicit-loop-barriers -loop-barriers -barriertails -barriers -isolate-regions -add-wi-metadata -wi-aa -workitemrepl -workitemloops -allocastoentry -workgroup -kernel=compute_indexmap -local-size=64 1 1 -disable-simplify-libcalls -target-address-spaces -O3 -instcombine -header=/tmp/poclHaStam/pthread/compute_indexmap/kernel_header.h -o /tmp/poclHaStam/pthread/compute_indexmap/64-1-1.0-0-0/parallel.bc /tmp/poclHaStam/pthread/compute_indexmap/kernel_linked.bc
Specialize kernel compute_indexmap with /tmp/poclHaStam/pthread/compute_indexmap/spec.info
Read arg 0
Read arg 1
Read arg 2
Read arg 3
Read arg 4
Function args:
 - Arg twiddle, type double addrspace(1)*
 - Arg d1, type i32
   --> Spec as i32 with value 512
 - Arg d2, type i32
   --> Spec as i32 with value 256
 - Arg d3, type i32
   --> Spec as i32 with value 256
 - Arg ap, type double
perl /home/nat/Apps/pocl/share/pocl/pocl-objs.pl /tmp/poclHaStam/pthread/compute_initial_conditions/kernel.bc /home/nat/Apps/pocl/lib/pocl/x86_64
/usr/local/bin/llvm-link -o /tmp/poclHaStam/pthread/compute_initial_conditions/kernel_linked.bc /tmp/poclHaStam/pthread/compute_initial_conditions/kernel.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_local_size.c.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_global_id.c.bc /home/nat/Apps/pocl/lib/pocl/x86_64/exp.cl.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_group_id.c.bc /home/nat/Apps/pocl/lib/pocl/x86_64/barrier.ll.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_local_id.c.bc
/usr/local/bin/opt -load=/home/nat/Apps/pocl/lib/pocl/llvmopencl.so -domtree -workitem-handler-chooser -break-constgeps -generate-header -flatten -always-inline -specialize -spec-info=/tmp/poclHaStam/pthread/compute_initial_conditions/spec.info -globaldce -simplifycfg -loop-simplify -phistoallocas -isolate-regions -uniformity -implicit-loop-barriers -loop-barriers -barriertails -barriers -isolate-regions -add-wi-metadata -wi-aa -workitemrepl -workitemloops -allocastoentry -workgroup -kernel=compute_initial_conditions -local-size=1 1 1 -disable-simplify-libcalls -target-address-spaces -O3 -instcombine -header=/tmp/poclHaStam/pthread/compute_initial_conditions/kernel_header.h -o /tmp/poclHaStam/pthread/compute_initial_conditions/1-1-1.0-0-0/parallel.bc /tmp/poclHaStam/pthread/compute_initial_conditions/kernel_linked.bc
Specialize kernel compute_initial_conditions with /tmp/poclHaStam/pthread/compute_initial_conditions/spec.info
Read arg 0
Read arg 1
Read arg 2
Read arg 3
Read arg 4
Function args:
 - Arg u0, type %struct.dcomplex addrspace(1)*
 - Arg starts, type double addrspace(1)*
 - Arg d1, type i32
   --> Spec as i32 with value 512
 - Arg d2, type i32
   --> Spec as i32 with value 256
 - Arg d3, type i32
   --> Spec as i32 with value 256
cake_spec: no spec annotation for cffts1
perl /home/nat/Apps/pocl/share/pocl/pocl-objs.pl /tmp/poclHaStam/pthread/cffts1/kernel.bc /home/nat/Apps/pocl/lib/pocl/x86_64
/usr/local/bin/llvm-link -o /tmp/poclHaStam/pthread/cffts1/kernel_linked.bc /tmp/poclHaStam/pthread/cffts1/kernel.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_local_size.c.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_global_id.c.bc /home/nat/Apps/pocl/lib/pocl/x86_64/exp.cl.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_group_id.c.bc /home/nat/Apps/pocl/lib/pocl/x86_64/barrier.ll.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_local_id.c.bc
/usr/local/bin/opt -load=/home/nat/Apps/pocl/lib/pocl/llvmopencl.so -domtree -workitem-handler-chooser -break-constgeps -generate-header -flatten -always-inline -specialize -spec-info=/tmp/poclHaStam/pthread/cffts1/spec.info -globaldce -simplifycfg -loop-simplify -phistoallocas -isolate-regions -uniformity -implicit-loop-barriers -loop-barriers -barriertails -barriers -isolate-regions -add-wi-metadata -wi-aa -workitemrepl -workitemloops -allocastoentry -workgroup -kernel=cffts1 -local-size=64 1 1 -disable-simplify-libcalls -target-address-spaces -O3 -instcombine -header=/tmp/poclHaStam/pthread/cffts1/kernel_header.h -o /tmp/poclHaStam/pthread/cffts1/64-1-1.0-0-0/parallel.bc /tmp/poclHaStam/pthread/cffts1/kernel_linked.bc
Specialize kernel cffts1 with /tmp/poclHaStam/pthread/cffts1/spec.info
Read arg 0
Read arg 1
Read arg 2
Read arg 3
Read arg 4
Read arg 5
Read arg 6
Read arg 7
Read arg 8
Read arg 9
Function args:
 - Arg x, type %struct.dcomplex addrspace(1)*
 - Arg xout, type %struct.dcomplex addrspace(1)*
 - Arg u, type %struct.dcomplex addrspace(1)*
 - Arg is, type i32
 - Arg d1, type i32
 - Arg d2, type i32
 - Arg d3, type i32
 - Arg logd1, type i32
 - Arg g_ty1, type %struct.dcomplex addrspace(1)*
 - Arg g_ty2, type %struct.dcomplex addrspace(1)*


 NAS Parallel Benchmarks (NPB3.3-OCL) - FT Benchmark

 Size                :  512x 256x 256
 Iterations          :             20



  == Work Scheduling ==

Global work size: 33619968 1 1
Local work size: 64 1 1
Specializing kernel init_ui on args: 
alpha
 arg 0
 # -> Arg u0:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg twiddle:double addrspace(1)*
 arg 3
 # -> Arg n:i32
== spec_info object: ==
Global size: 33619968 1 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (4)
  spec: 0
  name: u0
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: twiddle
  type: double addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: n
  type: i32
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel compute_indexmap on args: d1, d2, d3
alpha
 arg 0
 # -> Arg twiddle:double addrspace(1)*
 arg 1
 # -> Arg d1:i32, spec
 arg 2
 # -> Arg d2:i32, spec
 arg 3
 # -> Arg d3:i32, spec
 arg 4
 # -> Arg ap:double
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (5)
  spec: 0
  name: twiddle
  type: double addrspace(1)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 0
  name: ap
  type: double
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 256 1 1
Local work size: 1 1 1
Specializing kernel compute_initial_conditions on args: d1, d2, d3
alpha
 arg 0
 # -> Arg u0:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg starts:double addrspace(1)*
 arg 2
 # -> Arg d1:i32, spec
 arg 3
 # -> Arg d2:i32, spec
 arg 4
 # -> Arg d3:i32, spec
== spec_info object: ==
Global size: 256 1 1
Global Offset: 0 0 0
Local size: 1 1 1
Args: (5)
  spec: 0
  name: u0
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: starts
  type: double addrspace(1)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel cffts1 on args: 
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32
 arg 5
 # -> Arg d2:i32
 arg 6
 # -> Arg d3:i32
 arg 7
 # -> Arg logd1:i32
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d2
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d3
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: logd1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts2 on args: d1, d2, d3, logd2
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd2:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dperl /home/nat/Apps/pocl/share/pocl/pocl-objs.pl /tmp/poclHaStam/pthread/cffts2/kernel.bc /home/nat/Apps/pocl/lib/pocl/x86_64
/usr/local/bin/llvm-link -o /tmp/poclHaStam/pthread/cffts2/kernel_linked.bc /tmp/poclHaStam/pthread/cffts2/kernel.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_local_size.c.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_global_id.c.bc /home/nat/Apps/pocl/lib/pocl/x86_64/exp.cl.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_group_id.c.bc /home/nat/Apps/pocl/lib/pocl/x86_64/barrier.ll.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_local_id.c.bc
/usr/local/bin/opt -load=/home/nat/Apps/pocl/lib/pocl/llvmopencl.so -domtree -workitem-handler-chooser -break-constgeps -generate-header -flatten -always-inline -specialize -spec-info=/tmp/poclHaStam/pthread/cffts2/spec.info -globaldce -simplifycfg -loop-simplify -phistoallocas -isolate-regions -uniformity -implicit-loop-barriers -loop-barriers -barriertails -barriers -isolate-regions -add-wi-metadata -wi-aa -workitemrepl -workitemloops -allocastoentry -workgroup -kernel=cffts2 -local-size=64 1 1 -disable-simplify-libcalls -target-address-spaces -O3 -instcombine -header=/tmp/poclHaStam/pthread/cffts2/kernel_header.h -o /tmp/poclHaStam/pthread/cffts2/64-1-1.0-0-0/parallel.bc /tmp/poclHaStam/pthread/cffts2/kernel_linked.bc
Specialize kernel cffts2 with /tmp/poclHaStam/pthread/cffts2/spec.info
Read arg 0
Read arg 1
Read arg 2
Read arg 3
Read arg 4
Read arg 5
Read arg 6
Read arg 7
Read arg 8
Read arg 9
Function args:
 - Arg x, type %struct.dcomplex addrspace(1)*
 - Arg xout, type %struct.dcomplex addrspace(1)*
 - Arg u, type %struct.dcomplex addrspace(1)*
 - Arg is, type i32
 - Arg d1, type i32
   --> Spec as i32 with value 512
 - Arg d2, type i32
   --> Spec as i32 with value 256
 - Arg d3, type i32
   --> Spec as i32 with value 256
 - Arg logd2, type i32
   --> Spec as i32 with value 8
 - Arg g_ty1, type %struct.dcomplex addrspace(1)*
 - Arg g_ty2, type %struct.dcomplex addrspace(1)*
perl /home/nat/Apps/pocl/share/pocl/pocl-objs.pl /tmp/poclHaStam/pthread/cffts3/kernel.bc /home/nat/Apps/pocl/lib/pocl/x86_64
/usr/local/bin/llvm-link -o /tmp/poclHaStam/pthread/cffts3/kernel_linked.bc /tmp/poclHaStam/pthread/cffts3/kernel.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_local_size.c.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_global_id.c.bc /home/nat/Apps/pocl/lib/pocl/x86_64/exp.cl.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_group_id.c.bc /home/nat/Apps/pocl/lib/pocl/x86_64/barrier.ll.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_local_id.c.bc
/usr/local/bin/opt -load=/home/nat/Apps/pocl/lib/pocl/llvmopencl.so -domtree -workitem-handler-chooser -break-constgeps -generate-header -flatten -always-inline -specialize -spec-info=/tmp/poclHaStam/pthread/cffts3/spec.info -globaldce -simplifycfg -loop-simplify -phistoallocas -isolate-regions -uniformity -implicit-loop-barriers -loop-barriers -barriertails -barriers -isolate-regions -add-wi-metadata -wi-aa -workitemrepl -workitemloops -allocastoentry -workgroup -kernel=cffts3 -local-size=64 1 1 -disable-simplify-libcalls -target-address-spaces -O3 -instcombine -header=/tmp/poclHaStam/pthread/cffts3/kernel_header.h -o /tmp/poclHaStam/pthread/cffts3/64-1-1.0-0-0/parallel.bc /tmp/poclHaStam/pthread/cffts3/kernel_linked.bc
Specialize kernel cffts3 with /tmp/poclHaStam/pthread/cffts3/spec.info
Read arg 0
Read arg 1
Read arg 2
Read arg 3
Read arg 4
Read arg 5
Read arg 6
Read arg 7
Read arg 8
Read arg 9
Function args:
 - Arg x, type %struct.dcomplex addrspace(1)*
 - Arg xout, type %struct.dcomplex addrspace(1)*
 - Arg u, type %struct.dcomplex addrspace(1)*
 - Arg is, type i32
 - Arg d1, type i32
   --> Spec as i32 with value 512
 - Arg d2, type i32
   --> Spec as i32 with value 256
 - Arg d3, type i32
   --> Spec as i32 with value 256
 - Arg logd3, type i32
   --> Spec as i32 with value 8
 - Arg g_ty1, type %struct.dcomplex addrspace(1)*
 - Arg g_ty2, type %struct.dcomplex addrspace(1)*
cake_spec: no spec annotation for cffts1
complex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd2
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts3 on args: d1, d2, d3, logd3
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd3:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd3
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel compute_indexmap on args: d1, d2, d3
alpha
 arg 0
 # -> Arg twiddle:double addrspace(1)*
 arg 1
 # -> Arg d1:i32, spec
 arg 2
 # -> Arg d2:i32, spec
 arg 3
 # -> Arg d3:i32, spec
 arg 4
 # -> Arg ap:double
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (5)
  spec: 0
  name: twiddle
  type: double addrspace(1)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 0
  name: ap
  type: double
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 256 1 1
Local work size: 1 1 1
Specializing kernel compute_initial_conditions on args: d1, d2, d3
alpha
 arg 0
 # -> Arg u0:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg starts:double addrspace(1)*
 arg 2
 # -> Arg d1:i32, spec
 arg 3
 # -> Arg d2:i32, spec
 arg 4
 # -> Arg d3:i32, spec
== spec_info object: ==
Global size: 256 1 1
Global Offset: 0 0 0
Local size: 1 1 1
Args: (5)
  spec: 0
  name: u0
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: starts
  type: double addrspace(1)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel cffts1 on args: 
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32
 arg 5
 # -> Arg d2:i32
 arg 6
 # -> Arg d3:i32
 arg 7
 # -> Arg logd1:i32
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d2
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d3
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: logd1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts2 on args: d1, d2, d3, logd2
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd2:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd2
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts3 on args: d1, d2, d3, logd3
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd3:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd3
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel evolve on args: d1, d2, d3
alpha
 arg 0
 # -> Arg u0:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg twiddle:double addrspace(1)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
 arg 5
 # -> Arg d3:i32, spec
== spec_info object: ==
Global size: perl /home/nat/Apps/pocl/share/pocl/pocl-objs.pl /tmp/poclHaStam/pthread/evolve/kernel.bc /home/nat/Apps/pocl/lib/pocl/x86_64
/usr/local/bin/llvm-link -o /tmp/poclHaStam/pthread/evolve/kernel_linked.bc /tmp/poclHaStam/pthread/evolve/kernel.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_local_size.c.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_global_id.c.bc /home/nat/Apps/pocl/lib/pocl/x86_64/exp.cl.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_group_id.c.bc /home/nat/Apps/pocl/lib/pocl/x86_64/barrier.ll.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_local_id.c.bc
/usr/local/bin/opt -load=/home/nat/Apps/pocl/lib/pocl/llvmopencl.so -domtree -workitem-handler-chooser -break-constgeps -generate-header -flatten -always-inline -specialize -spec-info=/tmp/poclHaStam/pthread/evolve/spec.info -globaldce -simplifycfg -loop-simplify -phistoallocas -isolate-regions -uniformity -implicit-loop-barriers -loop-barriers -barriertails -barriers -isolate-regions -add-wi-metadata -wi-aa -workitemrepl -workitemloops -allocastoentry -workgroup -kernel=evolve -local-size=64 1 1 -disable-simplify-libcalls -target-address-spaces -O3 -instcombine -header=/tmp/poclHaStam/pthread/evolve/kernel_header.h -o /tmp/poclHaStam/pthread/evolve/64-1-1.0-0-0/parallel.bc /tmp/poclHaStam/pthread/evolve/kernel_linked.bc
Specialize kernel evolve with /tmp/poclHaStam/pthread/evolve/spec.info
Read arg 0
Read arg 1
Read arg 2
Read arg 3
Read arg 4
Read arg 5
Function args:
 - Arg u0, type %struct.dcomplex addrspace(1)*
 - Arg u1, type %struct.dcomplex addrspace(1)*
 - Arg twiddle, type double addrspace(1)*
 - Arg d1, type i32
   --> Spec as i32 with value 512
 - Arg d2, type i32
   --> Spec as i32 with value 256
 - Arg d3, type i32
   --> Spec as i32 with value 256
cake_spec: no spec annotation for cffts1
256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (6)
  spec: 0
  name: u0
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: twiddle
  type: double addrspace(1)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts3 on args: d1, d2, d3, logd3
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd3:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd3
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts2 on args: d1, d2, d3, logd2
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd2:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd2
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel cffts1 on args: 
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32
 arg 5
 # -> Arg d2:i32
 arg 6
 # -> Arg d3:i32
 arg 7
 # -> Arg logd1:i32
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: perl /home/nat/Apps/pocl/share/pocl/pocl-objs.pl /tmp/poclHaStam/pthread/checksum/kernel.bc /home/nat/Apps/pocl/lib/pocl/x86_64
/usr/local/bin/llvm-link -o /tmp/poclHaStam/pthread/checksum/kernel_linked.bc /tmp/poclHaStam/pthread/checksum/kernel.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_local_size.c.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_global_id.c.bc /home/nat/Apps/pocl/lib/pocl/x86_64/exp.cl.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_group_id.c.bc /home/nat/Apps/pocl/lib/pocl/x86_64/barrier.ll.bc /home/nat/Apps/pocl/lib/pocl/x86_64/get_local_id.c.bc
/usr/local/bin/opt -load=/home/nat/Apps/pocl/lib/pocl/llvmopencl.so -domtree -workitem-handler-chooser -break-constgeps -generate-header -flatten -always-inline -specialize -spec-info=/tmp/poclHaStam/pthread/checksum/spec.info -globaldce -simplifycfg -loop-simplify -phistoallocas -isolate-regions -uniformity -implicit-loop-barriers -loop-barriers -barriertails -barriers -isolate-regions -add-wi-metadata -wi-aa -workitemrepl -workitemloops -allocastoentry -workgroup -kernel=checksum -local-size=256 1 1 -disable-simplify-libcalls -target-address-spaces -O3 -instcombine -header=/tmp/poclHaStam/pthread/checksum/kernel_header.h -o /tmp/poclHaStam/pthread/checksum/256-1-1.0-0-0/parallel.bc /tmp/poclHaStam/pthread/checksum/kernel_linked.bc
Specialize kernel checksum with /tmp/poclHaStam/pthread/checksum/spec.info
Read arg 0
Read arg 1
Read arg 2
Read arg 3
Read arg 4
Function args:
 - Arg u1, type %struct.dcomplex addrspace(1)*
 - Arg g_chk, type %struct.dcomplex addrspace(1)*
 - Arg l_chk, type %struct.dcomplex addrspace(2)*
 - Arg d1, type i32
   --> Spec as i32 with value 512
 - Arg d2, type i32
   --> Spec as i32 with value 256
i32
  size: 0
  data: NULL
  spec: 0
  name: d1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d2
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d3
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: logd1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 1024 1 1
Local work size: 256 1 1
Specializing kernel checksum on args: d1, d2
alpha
 arg 0
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg g_chk:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg l_chk:%struct.dcomplex addrspace(2)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
== spec_info object: ==
Global size: 1024 1 1
Global Offset: 0 0 0
Local size: 256 1 1
Args: (5)
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_chk
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: l_chk
  type: %struct.dcomplex addrspace(2)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
 T =    1     Checksum =    5.177643571579E+02    5.077803458597E+02


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel evolve on args: d1, d2, d3
alpha
 arg 0
 # -> Arg u0:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg twiddle:double addrspace(1)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
 arg 5
 # -> Arg d3:i32, spec
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (6)
  spec: 0
  name: u0
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: twiddle
  type: double addrspace(1)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts3 on args: d1, d2, d3, logd3
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd3:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd3
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts2 on args: d1, d2, d3, logd2
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd2:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.cake_spec: no spec annotation for cffts1
dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd2
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel cffts1 on args: 
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32
 arg 5
 # -> Arg d2:i32
 arg 6
 # -> Arg d3:i32
 arg 7
 # -> Arg logd1:i32
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d2
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d3
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: logd1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 1024 1 1
Local work size: 256 1 1
Specializing kernel checksum on args: d1, d2
alpha
 arg 0
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg g_chk:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg l_chk:%struct.dcomplex addrspace(2)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
== spec_info object: ==
Global size: 1024 1 1
Global Offset: 0 0 0
Local size: 256 1 1
Args: (5)
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_chk
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: l_chk
  type: %struct.dcomplex addrspace(2)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
 T =    2     Checksum =    5.154521291263E+02    5.088249431599E+02


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel evolve on args: d1, d2, d3
alpha
 arg 0
 # -> Arg u0:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg twiddle:double addrspace(1)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
 arg 5
 # -> Arg d3:i32, spec
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (6)
  spec: 0
  name: u0
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: twiddle
  type: double addrspace(1)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts3 on args: d1, d2, d3, logd3
alpha
 arg 0
 # -> Arg x:%struct.cake_spec: no spec annotation for cffts1
dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd3:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd3
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts2 on args: d1, d2, d3, logd2
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd2:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd2
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel cffts1 on args: 
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32
 arg 5
 # -> Arg d2:i32
 arg 6
 # -> Arg d3:i32
 arg 7
 # -> Arg logd1:i32
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d2
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d3
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: logd1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 1024 1 1
Local work size: 256 1 1
Specializing kernel checksum on args: d1, d2
alpha
 arg 0
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg g_chk:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg l_chk:%struct.dcomplex addrspace(2)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
== spec_info object: ==
Global size: 1024 1 1
Global Offset: 0 0 0
Local size: 256 1 1
Args: (5)
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_chk
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: l_chk
  type: %struct.dcomplex addrspace(2)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
 T =    3     Checksum =    5.146409228650E+02    5.096208912659E+02


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel evolve on args: d1, d2, d3
alpha
 arg 0
 # -> Arg u0:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg twiddle:double addrspace(1)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
 arg 5
 # -> Arg d3:i32, spec
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (6)
  spec: 0
  name: u0
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: twiddle
  type: double addrspace(1)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts3 on args: d1, d2, d3, logd3
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd3:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd3
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts2 on args: d1, d2, d3, logd2
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd2:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd2
  type: i32
  size: cake_spec: no spec annotation for cffts1
4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel cffts1 on args: 
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32
 arg 5
 # -> Arg d2:i32
 arg 6
 # -> Arg d3:i32
 arg 7
 # -> Arg logd1:i32
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d2
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d3
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: logd1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 1024 1 1
Local work size: 256 1 1
Specializing kernel checksum on args: d1, d2
alpha
 arg 0
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg g_chk:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg l_chk:%struct.dcomplex addrspace(2)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
== spec_info object: ==
Global size: 1024 1 1
Global Offset: 0 0 0
Local size: 256 1 1
Args: (5)
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_chk
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: l_chk
  type: %struct.dcomplex addrspace(2)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
 T =    4     Checksum =    5.142378756213E+02    5.101023387619E+02


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel evolve on args: d1, d2, d3
alpha
 arg 0
 # -> Arg u0:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg twiddle:double addrspace(1)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
 arg 5
 # -> Arg d3:i32, spec
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (6)
  spec: 0
  name: u0
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: twiddle
  type: double addrspace(1)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts3 on args: d1, d2, d3, logd3
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd3:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spcake_spec: no spec annotation for cffts1
ec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd3
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts2 on args: d1, d2, d3, logd2
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd2:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd2
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel cffts1 on args: 
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32
 arg 5
 # -> Arg d2:i32
 arg 6
 # -> Arg d3:i32
 arg 7
 # -> Arg logd1:i32
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d2
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d3
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: logd1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 1024 1 1
Local work size: 256 1 1
Specializing kernel checksum on args: d1, d2
alpha
 arg 0
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg g_chk:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg l_chk:%struct.dcomplex addrspace(2)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
== spec_info object: ==
Global size: 1024 1 1
Global Offset: 0 0 0
Local size: 256 1 1
Args: (5)
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_chk
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: l_chk
  type: %struct.dcomplex addrspace(2)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
 T =    5     Checksum =    5.139626667737E+02    5.1cake_spec: no spec annotation for cffts1
03976610618E+02


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel evolve on args: d1, d2, d3
alpha
 arg 0
 # -> Arg u0:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg twiddle:double addrspace(1)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
 arg 5
 # -> Arg d3:i32, spec
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (6)
  spec: 0
  name: u0
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: twiddle
  type: double addrspace(1)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts3 on args: d1, d2, d3, logd3
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd3:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd3
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts2 on args: d1, d2, d3, logd2
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd2:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd2
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel cffts1 on args: 
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32
 arg 5
 # -> Arg d2:i32
 arg 6
 # -> Arg d3:i32
 arg 7
 # -> Arg logd1:i32
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d2
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d3
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: logd1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 1024 1 1
Local work size: 256 1 1
Specializing kernel checksum on args: d1, d2
alpha
 arg 0
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg g_chk:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg l_chk:%struct.dcomplex addrspace(2)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
== spec_info object: ==
Global size: 1024 1 1
Global Offset: 0 0 0
Local size: 256 1 1
Args: (5)
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_chk
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: l_chk
  type: %struct.dcomplex addrspace(2)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
 T =    6     Checksum =    5.137423460082E+02    5.105948019802E+02


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel evolve on args: d1, d2, d3
alpha
 arg 0
 # -> Arg u0:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg twiddle:double addrspace(1)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
 arg 5
 # -> Arg d3:i32, spec
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (6)
  spec: 0
  name: u0
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: twiddle
  type: double addrspace(1)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts3 on args: d1, d2, d3, logd3
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd3:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd3
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cfcake_spec: no spec annotation for cffts1
fts2 on args: d1, d2, d3, logd2
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd2:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd2
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel cffts1 on args: 
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32
 arg 5
 # -> Arg d2:i32
 arg 6
 # -> Arg d3:i32
 arg 7
 # -> Arg logd1:i32
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d2
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d3
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: logd1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 1024 1 1
Local work size: 256 1 1
Specializing kernel checksum on args: d1, d2
alpha
 arg 0
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg g_chk:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg l_chk:%struct.dcomplex addrspace(2)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
== spec_info object: ==
Global size: 1024 1 1
Global Offset: 0 0 0
Local size: 256 1 1
Args: (5)
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_chk
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: l_chk
  type: %struct.dcomplex addrspace(2)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
 T =    7     Checksum =    5.135547056878E+02    5.107404165783E+02


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel evolve on args: d1, d2, d3
alpha
 arg 0
 # -> Arg u0:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg twiddle:double addrspace(1)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
 arg 5
 # -> Arg d3:i32, spec
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (6)
  spec: 0
  name: u0
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
 cake_spec: no spec annotation for cffts1
 spec: 0
  name: twiddle
  type: double addrspace(1)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts3 on args: d1, d2, d3, logd3
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd3:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd3
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts2 on args: d1, d2, d3, logd2
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd2:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd2
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel cffts1 on args: 
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32
 arg 5
 # -> Arg d2:i32
 arg 6
 # -> Arg d3:i32
 arg 7
 # -> Arg logd1:i32
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d2
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d3
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: logd1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 1024 1 1
Local work size: 256 1 1
Specializing kernel checksum on args: d1, d2
alpha
 arg 0
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg g_chk:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg l_chk:%struct.dcomplex addrspace(2)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
== spec_info object: ==
Global size: 1024 1 1
Global Offset: 0 0 0
Local size: 256 1 1
Args: (5)
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_chk
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: l_chk
  type: %struct.dcomplex addrspace(2)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
 T =    8     Checksum =    5.133910925467E+02    5.108576573661E+02


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel evolve on args: d1, d2, d3
alpha
 arg 0
 # -> Arg u0:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg twiddle:double addrspace(1)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
 arg 5
 # -> Arg d3:i32, spec
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (6)
  spec: 0
  name: u0
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: twiddle
  type: double addrspace(1)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts3 on args: d1, d2, d3, logd3
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd3:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd3
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts2 on args: d1, d2, d3, logd2
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd2:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
 cake_spec: no spec annotation for cffts1
 type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd2
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel cffts1 on args: 
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32
 arg 5
 # -> Arg d2:i32
 arg 6
 # -> Arg d3:i32
 arg 7
 # -> Arg logd1:i32
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d2
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d3
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: logd1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 1024 1 1
Local work size: 256 1 1
Specializing kernel checksum on args: d1, d2
alpha
 arg 0
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg g_chk:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg l_chk:%struct.dcomplex addrspace(2)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
== spec_info object: ==
Global size: 1024 1 1
Global Offset: 0 0 0
Local size: 256 1 1
Args: (5)
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_chk
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: l_chk
  type: %struct.dcomplex addrspace(2)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
 T =    9     Checksum =    5.132470705390E+02    5.109577278523E+02


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel evolve on args: d1, d2, d3
alpha
 arg 0
 # -> Arg u0:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg twiddle:double addrspace(1)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
 arg 5
 # -> Arg d3:i32, spec
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (6)
  spec: 0
  name: u0
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: twiddle
  type: double addrspace(1)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts3 on args: d1, d2, d3, logd3
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg cake_spec: no spec annotation for cffts1
d3:i32, spec
 arg 7
 # -> Arg logd3:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd3
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts2 on args: d1, d2, d3, logd2
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd2:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd2
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel cffts1 on args: 
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32
 arg 5
 # -> Arg d2:i32
 arg 6
 # -> Arg d3:i32
 arg 7
 # -> Arg logd1:i32
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d2
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d3
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: logd1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 1024 1 1
Local work size: 256 1 1
Specializing kernel checksum on args: d1, d2
alpha
 arg 0
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg g_chk:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg l_chk:%struct.dcomplex addrspace(2)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
== spec_info object: ==
Global size: 1024 1 1
Global Offset: 0 0 0
Local size: 256 1 1
Args: (5)
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_chk
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: l_chk
  type: %struct.dcomplex addrspace(2)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
 T =   10     Checksum =    5.131197729984E+02    5.110460304483E+02


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel evolve on args: d1, d2, d3
alpha
 arg 0
 # -> Arg u0:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg twiddle:double addrspace(1)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
 arg 5
 # -> Arg d3:i32, spec
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (6)
  spec: 0
  name: u0
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: twiddle
  type: double addrspace(1)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts3 on args: d1, d2, d3, logd3
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd3:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd3
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts2 on args: d1, d2, d3, logd2
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd2:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd2
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global wocake_spec: no spec annotation for cffts1
rk size: 256 256 1
Local work size: 64 1 1
Specializing kernel cffts1 on args: 
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32
 arg 5
 # -> Arg d2:i32
 arg 6
 # -> Arg d3:i32
 arg 7
 # -> Arg logd1:i32
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d2
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d3
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: logd1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 1024 1 1
Local work size: 256 1 1
Specializing kernel checksum on args: d1, d2
alpha
 arg 0
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg g_chk:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg l_chk:%struct.dcomplex addrspace(2)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
== spec_info object: ==
Global size: 1024 1 1
Global Offset: 0 0 0
Local size: 256 1 1
Args: (5)
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_chk
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: l_chk
  type: %struct.dcomplex addrspace(2)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
 T =   11     Checksum =    5.130070319283E+02    5.111252433800E+02


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel evolve on args: d1, d2, d3
alpha
 arg 0
 # -> Arg u0:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg twiddle:double addrspace(1)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
 arg 5
 # -> Arg d3:i32, spec
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (6)
  spec: 0
  name: u0
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: twiddle
  type: double addrspace(1)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts3 on args: d1, d2, d3, logd3
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd3:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
cake_spec: no spec annotation for cffts1
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd3
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts2 on args: d1, d2, d3, logd2
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd2:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd2
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel cffts1 on args: 
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32
 arg 5
 # -> Arg d2:i32
 arg 6
 # -> Arg d3:i32
 arg 7
 # -> Arg logd1:i32
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d2
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d3
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: logd1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 1024 1 1
Local work size: 256 1 1
Specializing kernel checksum on args: d1, d2
alpha
 arg 0
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg g_chk:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg l_chk:%struct.dcomplex addrspace(2)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
== spec_info object: ==
Global size: 1024 1 1
Global Offset: 0 0 0
Local size: 256 1 1
Args: (5)
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_chk
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: l_chk
  type: %struct.dcomplex addrspace(2)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
 T =   12     Checksum =    5.129070537032E+02    5.111968077719E+02


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel evolve on args: d1, d2, d3
alpha
 arg 0
 # -> Arg u0:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg u1:%struct.cake_spec: no spec annotation for cffts1
dcomplex addrspace(1)*
 arg 2
 # -> Arg twiddle:double addrspace(1)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
 arg 5
 # -> Arg d3:i32, spec
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (6)
  spec: 0
  name: u0
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: twiddle
  type: double addrspace(1)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts3 on args: d1, d2, d3, logd3
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd3:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd3
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts2 on args: d1, d2, d3, logd2
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd2:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd2
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel cffts1 on args: 
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32
 arg 5
 # -> Arg d2:i32
 arg 6
 # -> Arg d3:i32
 arg 7
 # -> Arg logd1:i32
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d2
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d3
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: logd1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 1024 1 1
Local work size: 256 1 1
Specializing kernel checksum on args: d1, d2
alpha
 arg 0
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg g_chk:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg l_chk:%struct.dcomplex addrspace(2)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
== spec_info object: ==
Global size: 1024 1 1
Global Offset: 0 0 0
Local size: 256 1 1
Args: (5)
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_chk
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: l_chk
  type: %struct.dcomplex addrspace(2)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
 T =   13     Checksum =    5.128182883503E+02    5.112616233064E+02


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel evolve on args: d1, d2, d3
alpha
 arg 0
 # -> Arg u0:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg twiddle:double addrspace(1)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
 arg 5
 # -> Arg d3:i32, spec
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (6)
  spec: 0
  name: u0
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: twiddle
  type: double addrspace(1)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts3 on args: d1, d2, d3, logd3
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd3:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd3
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts2 on args: d1, d2, d3, logd2
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # ->cake_spec: no spec annotation for cffts1
 Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd2:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd2
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel cffts1 on args: 
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32
 arg 5
 # -> Arg d2:i32
 arg 6
 # -> Arg d3:i32
 arg 7
 # -> Arg logd1:i32
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d2
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d3
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: logd1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 1024 1 1
Local work size: 256 1 1
Specializing kernel checksum on args: d1, d2
alpha
 arg 0
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg g_chk:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg l_chk:%struct.dcomplex addrspace(2)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
== spec_info object: ==
Global size: 1024 1 1
Global Offset: 0 0 0
Local size: 256 1 1
Args: (5)
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_chk
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: l_chk
  type: %struct.dcomplex addrspace(2)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
 T =   14     Checksum =    5.127393733383E+02    5.113203605551E+02


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel evolve on args: d1, d2, d3
alpha
 arg 0
 # -> Arg u0:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg twiddle:double addrspace(1)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
 arg 5
 # -> Arg d3:i32, spec
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (6)
  spec: 0
  name: u0
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: twiddle
  type: double addrspace(1)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: icake_spec: no spec annotation for cffts1
32
  size: 4
  data: 00010000


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts3 on args: d1, d2, d3, logd3
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd3:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd3
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts2 on args: d1, d2, d3, logd2
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd2:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd2
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel cffts1 on args: 
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32
 arg 5
 # -> Arg d2:i32
 arg 6
 # -> Arg d3:i32
 arg 7
 # -> Arg logd1:i32
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d2
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d3
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: logd1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 1024 1 1
Local work size: 256 1 1
Specializing kernel checksum on args: d1, d2
alpha
 arg 0
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg g_chk:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg l_chk:%struct.dcomplex addrspace(2)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
== spec_info object: ==
Global size: 1024 1 1
Global Offset: 0 0 0
Local size: 256 1 1
Args: (5)
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_chk
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: l_chk
  type: %struct.dcomplex addrspace(2)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
 T =   15     Checksum =    5.126691062021E+02    5.113735928093E+02


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel evolve on args: d1, d2, d3
alpha
 arg 0
 # -> Arg u0:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg twiddle:double addrspace(1)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
 arg 5
 # -> Arg d3:i32, spec
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (6)
  spec: 0
  name: u0
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: twiddle
  type: double addrspace(1)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts3 on args: d1, d2, d3, logd3
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd3:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd3
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts2 on args: d1, d2, d3, logd2
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd2:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type:cake_spec: no spec annotation for cffts1
 i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd2
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel cffts1 on args: 
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32
 arg 5
 # -> Arg d2:i32
 arg 6
 # -> Arg d3:i32
 arg 7
 # -> Arg logd1:i32
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d2
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d3
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: logd1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 1024 1 1
Local work size: 256 1 1
Specializing kernel checksum on args: d1, d2
alpha
 arg 0
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg g_chk:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg l_chk:%struct.dcomplex addrspace(2)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
== spec_info object: ==
Global size: 1024 1 1
Global Offset: 0 0 0
Local size: 256 1 1
Args: (5)
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_chk
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: l_chk
  type: %struct.dcomplex addrspace(2)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
 T =   16     Checksum =    5.126064276005E+02    5.114218460548E+02


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel evolve on args: d1, d2, d3
alpha
 arg 0
 # -> Arg u0:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg twiddle:double addrspace(1)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
 arg 5
 # -> Arg d3:i32, spec
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (6)
  spec: 0
  name: u0
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: twiddle
  type: double addrspace(1)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts3 on args: d1, d2, d3, logd3
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd3:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Localcake_spec: no spec annotation for cffts1
 size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd3
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts2 on args: d1, d2, d3, logd2
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd2:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd2
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel cffts1 on args: 
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32
 arg 5
 # -> Arg d2:i32
 arg 6
 # -> Arg d3:i32
 arg 7
 # -> Arg logd1:i32
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d2
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d3
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: logd1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 1024 1 1
Local work size: 256 1 1
Specializing kernel checksum on args: d1, d2
alpha
 arg 0
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg g_chk:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg l_chk:%struct.dcomplex addrspace(2)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
== spec_info object: ==
Global size: 1024 1 1
Global Offset: 0 0 0
Local size: 256 1 1
Args: (5)
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_chk
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: l_chk
  type: %struct.dcomplex addrspace(2)*
cake_spec: no spec annotation for cffts1
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
 T =   17     Checksum =    5.125504076570E+02    5.114656139760E+02


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel evolve on args: d1, d2, d3
alpha
 arg 0
 # -> Arg u0:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg twiddle:double addrspace(1)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
 arg 5
 # -> Arg d3:i32, spec
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (6)
  spec: 0
  name: u0
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: twiddle
  type: double addrspace(1)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts3 on args: d1, d2, d3, logd3
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd3:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd3
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts2 on args: d1, d2, d3, logd2
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd2:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd2
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel cffts1 on args: 
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32
 arg 5
 # -> Arg d2:i32
 arg 6
 # -> Arg d3:i32
 arg 7
 # -> Arg logd1:i32
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d2
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d3
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: logd1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 1024 1 1
Local work size: 256 1 1
Specializing kernel checksum on args: d1, d2
alpha
 arg 0
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg g_chk:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg l_chk:%struct.dcomplex addrspace(2)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
== spec_info object: ==
Global size: 1024 1 1
Global Offset: 0 0 0
Local size: 256 1 1
Args: (5)
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_chk
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: l_chk
  type: %struct.dcomplex addrspace(2)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
 T =   18     Checksum =    5.125002331721E+02    5.115053595966E+02


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel evolve on args: d1, d2, d3
alpha
 arg 0
 # -> Arg u0:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg twiddle:double addrspace(1)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
 arg 5
 # -> Arg d3:i32, spec
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (6)
  spec: 0
  name: u0
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: twiddle
  type: double addrspace(1)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts3 on args: d1, d2, d3, logd3
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd3:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd3
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  dacake_spec: no spec annotation for cffts1
ta: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts2 on args: d1, d2, d3, logd2
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd2:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd2
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel cffts1 on args: 
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32
 arg 5
 # -> Arg d2:i32
 arg 6
 # -> Arg d3:i32
 arg 7
 # -> Arg logd1:i32
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d2
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d3
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: logd1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 1024 1 1
Local work size: 256 1 1
Specializing kernel checksum on args: d1, d2
alpha
 arg 0
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg g_chk:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg l_chk:%struct.dcomplex addrspace(2)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
== spec_info object: ==
Global size: 1024 1 1
Global Offset: 0 0 0
Local size: 256 1 1
Args: (5)
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_chk
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: l_chk
  type: %struct.dcomplex addrspace(2)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
 T =   19     Checksum =    5.124551951846E+02    5.115415130407E+02


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel evolve on args: d1, d2, d3
alpha
 arg 0
 # -> Arg u0:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg twiddle:double addrspace(1)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
 arg 5
 # -> Arg d3:i32, spec
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
cake_spec: no spec annotation for cffts1
Local size: 64 1 1
Args: (6)
  spec: 0
  name: u0
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: twiddle
  type: double addrspace(1)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts3 on args: d1, d2, d3, logd3
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd3:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd3
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 512 256 1
Local work size: 64 1 1
Specializing kernel cffts2 on args: d1, d2, d3, logd2
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32, spec
 arg 5
 # -> Arg d2:i32, spec
 arg 6
 # -> Arg d3:i32, spec
 arg 7
 # -> Arg logd2:i32, spec
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 512 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: d3
  type: i32
  size: 4
  data: 00010000
  spec: 1
  name: logd2
  type: i32
  size: 4
  data: 08000000
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 256 256 1
Local work size: 64 1 1
Specializing kernel cffts1 on args: 
alpha
 arg 0
 # -> Arg x:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg xout:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg u:%struct.dcomplex addrspace(1)*
 arg 3
 # -> Arg is:i32
 arg 4
 # -> Arg d1:i32
 arg 5
 # -> Arg d2:i32
 arg 6
 # -> Arg d3:i32
 arg 7
 # -> Arg logd1:i32
 arg 8
 # -> Arg g_ty1:%struct.dcomplex addrspace(1)*
 arg 9
 # -> Arg g_ty2:%struct.dcomplex addrspace(1)*
== spec_info object: ==
Global size: 256 256 1
Global Offset: 0 0 0
Local size: 64 1 1
Args: (10)
  spec: 0
  name: x
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: xout
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: u
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: is
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d2
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: d3
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: logd1
  type: i32
  size: 0
  data: NULL
  spec: 0
  name: g_ty1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_ty2
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL


  == Work Scheduling ==

Global work size: 1024 1 1
Local work size: 256 1 1
Specializing kernel checksum on args: d1, d2
alpha
 arg 0
 # -> Arg u1:%struct.dcomplex addrspace(1)*
 arg 1
 # -> Arg g_chk:%struct.dcomplex addrspace(1)*
 arg 2
 # -> Arg l_chk:%struct.dcomplex addrspace(2)*
 arg 3
 # -> Arg d1:i32, spec
 arg 4
 # -> Arg d2:i32, spec
== spec_info object: ==
Global size: 1024 1 1
Global Offset: 0 0 0
Local size: 256 1 1
Args: (5)
  spec: 0
  name: u1
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: g_chk
  type: %struct.dcomplex addrspace(1)*
  size: 0
  data: NULL
  spec: 0
  name: l_chk
  type: %struct.dcomplex addrspace(2)*
  size: 0
  data: NULL
  spec: 1
  name: d1
  type: i32
  size: 4
  data: 00020000
  spec: 1
  name: d2
  type: i32
  size: 4
  data: 00010000
 T =   20     Checksum =    5.124146770029E+02    5.115744692211E+02
 Result verification successful
 class = B


 FT Benchmark Completed.
 Class           =                        B
 Size            =            512x 256x 256
 Iterations      =                       20
 Time in seconds =                    44.99
 Mop/s total     =                  2046.10
 Operation type  =           floating point
 Verification    =               SUCCESSFUL
 Version         =                    3.3.1
 Compile date    =              23 Jul 2013

 Compile options:
    CC           = gcc
    CLINK        = $(CC)
    C_LIB        = -lm $(OCL_LDLIBS)
    C_INC        = -I../common 
    CFLAGS       = (none)
    CLINKFLAGS   = -L$(OCL_LDPATH) -O3 -mcmodel=medium
    RAND         = randdp

 OpenCL options:
    Device type  = CL_DEVICE_TYPE_CPU
    Device name  = pthread

--------------------------------------
 Please send all errors/feedbacks to:
 Center for Manycore Programming
 cmp@aces.snu.ac.kr
 http://aces.snu.ac.kr
--------------------------------------


real	1m8.733s
user	3m6.916s
sys	0m6.932s
